// auto-generated by Fins.AdminTools.ModelBuilder for table users.

inherit Fins.Model.DataObject;

string table_name="users";

void post_define(object context)
{
// Add any post configuration logic here
  set_alternate_key("username");
  has_many(context, "Matcasearrangement", "mcas", "owner");
  has_many(context, "Stopbar", "stopbars", "owner");
//  belongs_to(context, "Matcasearrangement", "mcas", )
  has_many_by_index(context, "Preference", "name");
  set_renderer_for_field("is_admin", Fins.Helpers.Renderers.CheckBoxRenderer());
  set_renderer_for_field("is_active", Fins.Helpers.Renderers.CheckBoxRenderer());
}
void transform(mapping changes, Fins.Errors.Validation errors, object i)
{
  werror("transform.\n");
  // if the password is not a valid md5 hash entry, encrypt it.
  if(has_index(changes, "password") && catch(Crypto.verify_crypt_md5("foo", changes["password"])))
  {
    changes["password"] = Crypto.make_crypt_md5(changes["password"]);
  }
}
